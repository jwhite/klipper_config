[include stealthburner_led.cfg]

[gcode_macro CANCEL_PRINT]

description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE

gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    #G90                            ; absolute positioning
    #G0  X125 Y250 F3600            ; park nozzle at rear


    {% if printer.toolhead.position.z < 300 %}
    G1 Z50
    {% endif %}


#
# Pause Macros
#

[pause_resume]


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length

    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    ##### end of definitions #####

    # Save state and set pause state here
    PAUSE_BASE
    G91

    # If the hotend is hot, retract
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}

    # Move to safe location
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length

    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}

    ##### end of definitions #####

    # Return filament to the extruder
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  

    # Start printing 
    RESUME_BASE {get_params}

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.



# Change filament
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-10 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro FILAMENT_RUNOUT]
gcode:
#M300 S1 P10
    M600
#M300 S1 P10

[gcode_macro CHANGE_NOZZLE]
description: position the nozzle for a nozzle change
gcode:
     M400                           ; wait for buffer to clear

    M117 "Nozzle Change"
    M107                           ; turn off fan
    G1 XZ2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning

    {% if printer.toolhead.position.z < 250 %}
    G0 Z250 X175 Y20 F3600        ; bring nozzle forward, center

    {% else %}                      ; Might be in the middle of a model
    G91
    G0 Z2 F20000                    ; Bump nozzle up a bit
    G90                             
    G0  X175 Y20 F3600        ; bring nozzle forward, center
    {% endif %}
    BED_MESH_CLEAR

#####################################################################################################



[gcode_macro PRIME_NOZZLE]
description: print a priming line along the front of the bed
gcode:
    {% if not params.T_NOZZLE %}
    { action_raise_error("nozzle temperature not specified") }
    {% endif %}
    {% set nozzle_temp = params.T_NOZZLE|int %}

    SAVE_GCODE_STATE NAME=prime_nozzle
    
    M117 "Priming nozzle"
    G90 # Absolute positioning

    # Verify that the toolhead isn't to close to the bed
    {% if printer.toolhead.position.z < 5 %}
    G0 Z5 F10000
    {% endif %}

    # Go to Y0 (This used to be negative 3, but test the bed first)
    G0 X5 Y0 F10000
    
    G0 Z5 F1000

    # Wait for the nozzle to come up to temp
    M109 S{nozzle_temp}

    # Move Z for a squishy line
    # Initial line is hard coded to .3 to ensure that backpressure doen't 
    # affect the flow.
    G0 X10 Z0.3 F1000

    # Back to relative coords
    G91

    # Draw a nice line
    G1 X100 E8 F1500
    G1 X100 E8 F1500
    
    # Move up a touch, and jog the printhead
    G1 E-1 F500 ; Retract a little
    G0 Z0.5 F1000
    G1 X-50 F4000 ; Quickly wipe away from the filament line
    G1 Z2 ; Raise and begin printing

    # Clear the display
    M117  
    RESTORE_GCODE_STATE NAME=prime_nozzle

[gcode_macro PRINT_START_CALIBRATE]
description: preheat and do a full kinematic calibration

#default_parameter_T_PREHEAT: 170 # Pre-Heat at below oozing temperature
gcode:
    {% if not params.T_PREHEAT %}
    { action_raise_error("nozzle preheat temperature not specified") }
    {% endif %}
    {% if not params.T_BED %}
    { action_raise_error("bed temperature not specified") }
    {% endif %}
    {% set preheat_temp = params.T_PREHEAT|int %}
    {% set bed_temp = params.T_BED|int %}

    SAVE_GCODE_STATE NAME=print_start_preheat
    # Absolute positioning, extruder relative, clear mesh.
    G90
    M83
    BED_MESH_CLEAR

    # Basic home to bring up kinematics.
    M117 "Homing"   # Send to LCD
    status_homing
    G28

    # Raise to preheat temp
    # Heat bed, preheat nozzle, wait for both.
    M117 "Softening for Clean"
    status_heating

    # Set temps
    M104 S{preheat_temp}
    
    # Wait for temps
    M109 S{preheat_temp}

    # Clean any goo off of the nozzle
    M117 "Clean Nozzle"
    status_cleaning
    clean_nozzle

    # Park in center of the bed and close to it, for the inductive
    # probe to soak up heat.
    G0 Z10 F10000
    G0 X125 Y125 F20000

    # Heat bed, preheat nozzle, wait for both.
    M117 "Preheating"
    
    # Set temps
    M104 S{preheat_temp}
    M140 S{bed_temp}
    
    # Wait for temps
    M109 S{preheat_temp}
    M190 S{bed_temp}

    # Level gantry, re-home, compute bed mesh.
    M117 "Leveling gantry"
    status_leveling
    QUAD_GANTRY_LEVEL
    G28 Z

    M117 "Bed mesh"
    status_meshing
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=auto
    
    M117 "Homing"   # Send to LCD
    status_homing
    G28 Z

    # Clear display.
    M117 

    RESTORE_GCODE_STATE NAME=print_start_preheat

[gcode_macro NOZZLE_HEIGHT_CALIBRATE]
description: move the nozzle to the center of the bed and begin calibration
gcode:
    # Re-Home now that the nozzle is clean
    M117 "Homing"   # Send to LCD
    status_homing
    G28

    # Level gantry, re-home, compute bed mesh.
    M117 "Leveling gantry"
    status_leveling
    QUAD_GANTRY_LEVEL
    G28 Z

    G91
    G1 y-200 F7800
    G90

    Z_ENDSTOP_CALIBRATE

[gcode_macro PRINT_START]
description: prepare printer for a print
#default_parameter_T_PREHEAT: 170
gcode:
    # Eval these early, so that the missing required nozzle and bed
    # temps trigger sadness before doing anything.
    {% if not params.T_NOZZLE %}
    { action_raise_error("nozzle temperature not specified") }
    {% endif %}
    {% if not params.T_PREHEAT %}
    { action_raise_error("nozzle preheat temperature not specified") }
    {% endif %}
    {% if not params.T_BED %}
    { action_raise_error("bed temperature not specified") }
    {% endif %}

    # Store some variables locally
    {% set nozzle_temp = params.T_NOZZLE|int %}
    {% set preheat_temp = params.T_PREHEAT|int %}
    {% set bed_temp = params.T_BED|int %}

    # Clear any previous pause state
    CLEAR_PAUSE
    M117 "Clearing Pause"
    status_ready

    # Turn off the filament sensor  
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0

    # Reset a bunch of gcode state: no bed mesh, no live Z, absolute
    # coords, extruder relative coords.
    G90
    M83

    #SET_GCODE_OFFSET Z=0  

    # Get the kinematics fully calibrated, and everything preheated.
    # Note : This is preheated to pre-ooze temperatures
    PRINT_START_CALIBRATE T_BED={bed_temp} T_PREHEAT={preheat_temp}

    # Move to priming location, and heat to full printing temp.
    PRIME_NOZZLE T_NOZZLE={nozzle_temp}

    # Turn on the filament sensor  
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=1

    # Extruder neees to be in absolute units for Marlin G-Code to start
    G90
    M82
    status_printing

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear

    M117 "Cancel Lift Occuring"
    {% if printer.toolhead.position.z < 250 %}
    G0 Z250
    {% endif %}
    
    BED_MESH_CLEAR

